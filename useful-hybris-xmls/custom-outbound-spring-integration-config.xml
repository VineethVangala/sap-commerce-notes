<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/integration"
       xmlns:int-http="http://www.springframework.org/schema/integration/http"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/integration
           http://www.springframework.org/schema/integration/spring-integration.xsd
           http://www.springframework.org/schema/integration/http
           http://www.springframework.org/schema/integration/http/spring-integration-http.xsd">

    <gateway id="customGetGateway" service-interface="custom.integrations.service.gatewy.CustomGetGateway"
        error-channel="customGetErrorChannel" default-reply-timeout="10000"/>

    <gateway id="customPostGateway" service-interface="custom.integrations.service.gatewy.CustomPostGateway"
        error-channel="customPostErrorChannel" default-reply-timeout="10000"/>

    <channel id="customGetRequestChannel"/>
    <channel id="customGetResponseChannel"/>
    <channel id="customGetErrorChannel"/>

    <channel id="customPostRequestChannel"/>
    <channel id="customPostResponseChannel"/>
    <channel id="customPostErrorChannel"/>


    <chain input-channel="customGetRequestChannel" output-channel="customGetResponseChannel">

        <header-enricher>
            <header name="Accept" expression="'application/json'"/>
            <header name="Content-type" expression="'application/json';charset=utf-8"/>
            <header name="urlParam1" expression="'payload.getUrlParam1()'"/>
        </header-enricher>

        <int-http:outbound-gateway url="custom{get_url_key}?param={urlParam1}" http-method="GET"
            mapped-request-headers="accept,Content-Type,urlParam1"
            rest-template="restTemplate"
            expected-response-type="custom.integrations.rest.model.CustomGetResponseImpl">
                <int-http:uri-variable name="urlParam1" expression="headers['urlParam1']"> </int-http:uri-variable>
        </int-http:outbound-gateway>
    </chain>

    <chain input-channel="customGetErrorChannel" output-channel="customGetResponseChannel">
        <service-activator ref="springIntegrationResponseExceptionHandler" method="handleCustomGetResponse"/>
    </chain>


    <chain input-channel="customPostRequestChannel" output-channel="customPostResponseChannel">

        <header-enricher>
            <header name="Accept" expression="'application/json'"/>
            <header name="Content-type" expression="'application/json';charset=utf-8"/>
            <header name="request" expression="'payload'"/>
        </header-enricher>

        <int-http:outbound-gateway url="custom{post_url_key}" http-method="Post"
            mapped-request-headers="accept,Content-Type"
            rest-template="restTemplate"
            expected-response-type="custom.integrations.rest.model.CustomPostResponseImpl">
                <int-http:uri-variable name="request" expression="headers['request']"> </int-http:uri-variable>
        </int-http:outbound-gateway>
    </chain>

    <chain input-channel="customPostErrorChannel" output-channel="customPostResponseChannel">
        <service-activator ref="springIntegrationResponseExceptionHandler" method="handleCustomPostResponse"/>
    </chain>
</beans>



<!--
 Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-http="http://www.springframework.org/schema/integration/http"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/integration
           http://www.springframework.org/schema/integration/spring-integration.xsd
           http://www.springframework.org/schema/integration/http
           http://www.springframework.org/schema/integration/http/spring-integration-http.xsd">

<!-- Spring Integration Configuration -->

<int:channel id="httpGETRequestChannel"/>
<int:channel id="httpPOSTRequestChannel"/>
<int:channel id="httpPUTRequestChannel"/>
<int:channel id="httpDELETERequestChannel"/>

<int:poller default="true" fixed-delay="50"/>
 
 <int:gateway id="httpGETGateway" service-interface="de.hybris.smartedit.controllers.HttpGETGateway" 
 default-request-channel="httpGETRequestChannel">
 	<int:method name="loadAll" />
 </int:gateway>
 
<int:gateway id="httpPOSTGateway" service-interface="de.hybris.smartedit.controllers.HttpPOSTGateway" 
 default-request-channel="httpPOSTRequestChannel">
   <int:method name="save">
            <int:header name="Content-Type" value="application/json"/>
        </int:method>
 </int:gateway>
 
<int:gateway id="httpPUTGateway" service-interface="de.hybris.smartedit.controllers.HttpPUTGateway" 
 default-request-channel="httpPUTRequestChannel">
   <int:method name="update">
            <int:header name="Content-Type" value="application/json"/>
        </int:method>
 </int:gateway>
 
   <int:gateway id="httpDELETEGateway" service-interface="de.hybris.smartedit.controllers.HttpDELETEGateway" 
 default-request-channel="httpDELETERequestChannel">
   <int:method name="delete">
            <int:header name="Content-Type" value="application/json"/>
        </int:method>
 </int:gateway>

 	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="de.hybris.smartedit.UriVariablesResolver.setHostConfiguration"/>
		<property name="arguments">
			<list>
				<value>${tomcat.ssl.port}</value>
				<value>${tomcat.http.port}</value>
				<value>${smartedit.tomcat.hostname}</value>
			</list>
		</property>
	</bean>

 <!--outbound gateways to get/post/put/delete data to/from url-->
	<int-http:outbound-gateway id='httpGETOutboundGateway'
     request-channel='httpGETRequestChannel'
     url="{scheme}://{host}:{port}${configurationServiceLocation}"
     http-method='GET'
     expected-response-type='java.lang.String'
     charset='UTF-8'>
        <int-http:uri-variable name="scheme" expression="T(org.springframework.web.context.request.RequestContextHolder).
            requestAttributes.request.getScheme()"/>
        <int-http:uri-variable name="host" expression="T(de.hybris.smartedit.UriVariablesResolver).resolveHost()" />
        <int-http:uri-variable name="port" expression="T(de.hybris.smartedit.UriVariablesResolver).resolvePort()" />
     </int-http:outbound-gateway>

	<int-http:outbound-gateway id='httpPOSTOutboundGateway'
     request-channel='httpPOSTRequestChannel'
     url="{scheme}://{host}:{port}${configurationServiceLocation}"
     http-method='POST'
     charset='UTF-8'
     expected-response-type='java.lang.String'>
        <int-http:uri-variable name="scheme" expression="T(org.springframework.web.context.request.RequestContextHolder).
            requestAttributes.request.getScheme()"/>
        <int-http:uri-variable name="host" expression="T(de.hybris.smartedit.UriVariablesResolver).resolveHost()" />
        <int-http:uri-variable name="port" expression="T(de.hybris.smartedit.UriVariablesResolver).resolvePort()" />
    </int-http:outbound-gateway>
     
    <int-http:outbound-gateway id='httpPUTOutboundGateway'
     request-channel='httpPUTRequestChannel'
     url='{scheme}://{host}:{port}${configurationServiceLocation}/{configId}'
     http-method='PUT'
     charset='UTF-8'
     expected-response-type='java.lang.String'>
        <int-http:uri-variable name="configId" expression="payload[key]"/>
        <int-http:uri-variable name="scheme" expression="T(org.springframework.web.context.request.RequestContextHolder).
            requestAttributes.request.getScheme()"/>
        <int-http:uri-variable name="host" expression="T(de.hybris.smartedit.UriVariablesResolver).resolveHost()" />
        <int-http:uri-variable name="port" expression="T(de.hybris.smartedit.UriVariablesResolver).resolvePort()" />
     </int-http:outbound-gateway>
     
    <int-http:outbound-channel-adapter id='httpDELETEOutboundGateway'
     channel='httpDELETERequestChannel'
     url='{scheme}://{host}:{port}${configurationServiceLocation}/{configId}'
     http-method='DELETE'
     charset='UTF-8'
     expected-response-type='java.lang.String'>
        <int-http:uri-variable name="configId" expression="payload[key]"/>
        <int-http:uri-variable name="scheme" expression="T(org.springframework.web.context.request.RequestContextHolder).
            requestAttributes.request.getScheme()"/>
        <int-http:uri-variable name="host" expression="T(de.hybris.smartedit.UriVariablesResolver).resolveHost()" />
        <int-http:uri-variable name="port" expression="T(de.hybris.smartedit.UriVariablesResolver).resolvePort()" />
     </int-http:outbound-channel-adapter>  

</beans>